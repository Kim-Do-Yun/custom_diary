plugins {
    id 'org.springframework.boot' version '3.2.3'    // 프로젝트에 맞게 조정
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Web / JSON
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Bean Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // PostgreSQL
    implementation 'org.postgresql:postgresql'
    // Lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Firebase Admin SDK
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // JSON serialization/deserialization
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.core:jackson-core'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}

test {
    useJUnitPlatform()
}